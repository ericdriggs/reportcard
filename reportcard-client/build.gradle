buildscript {
    ext {
        okHttpVersion = '4.7.2'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
	id 'idea'
}

dependencies {
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
//    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
//    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
//    runtime 'org.slf4j:jul-to-slf4j:1.7.30'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output

    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly

    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}