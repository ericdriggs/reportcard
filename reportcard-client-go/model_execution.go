/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Execution struct for Execution
type Execution struct {
	ExecutionId *int64 `json:"executionId,omitempty"`
	ExecutionExternalId *string `json:"executionExternalId,omitempty"`
	ContextFk *int64 `json:"contextFk,omitempty"`
}

// NewExecution instantiates a new Execution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecution() *Execution {
	this := Execution{}
	return &this
}

// NewExecutionWithDefaults instantiates a new Execution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionWithDefaults() *Execution {
	this := Execution{}
	return &this
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *Execution) GetExecutionId() int64 {
	if o == nil || o.ExecutionId == nil {
		var ret int64
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetExecutionIdOk() (*int64, bool) {
	if o == nil || o.ExecutionId == nil {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *Execution) HasExecutionId() bool {
	if o != nil && o.ExecutionId != nil {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given int64 and assigns it to the ExecutionId field.
func (o *Execution) SetExecutionId(v int64) {
	o.ExecutionId = &v
}

// GetExecutionExternalId returns the ExecutionExternalId field value if set, zero value otherwise.
func (o *Execution) GetExecutionExternalId() string {
	if o == nil || o.ExecutionExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExecutionExternalId
}

// GetExecutionExternalIdOk returns a tuple with the ExecutionExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetExecutionExternalIdOk() (*string, bool) {
	if o == nil || o.ExecutionExternalId == nil {
		return nil, false
	}
	return o.ExecutionExternalId, true
}

// HasExecutionExternalId returns a boolean if a field has been set.
func (o *Execution) HasExecutionExternalId() bool {
	if o != nil && o.ExecutionExternalId != nil {
		return true
	}

	return false
}

// SetExecutionExternalId gets a reference to the given string and assigns it to the ExecutionExternalId field.
func (o *Execution) SetExecutionExternalId(v string) {
	o.ExecutionExternalId = &v
}

// GetContextFk returns the ContextFk field value if set, zero value otherwise.
func (o *Execution) GetContextFk() int64 {
	if o == nil || o.ContextFk == nil {
		var ret int64
		return ret
	}
	return *o.ContextFk
}

// GetContextFkOk returns a tuple with the ContextFk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetContextFkOk() (*int64, bool) {
	if o == nil || o.ContextFk == nil {
		return nil, false
	}
	return o.ContextFk, true
}

// HasContextFk returns a boolean if a field has been set.
func (o *Execution) HasContextFk() bool {
	if o != nil && o.ContextFk != nil {
		return true
	}

	return false
}

// SetContextFk gets a reference to the given int64 and assigns it to the ContextFk field.
func (o *Execution) SetContextFk(v int64) {
	o.ContextFk = &v
}

func (o Execution) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExecutionId != nil {
		toSerialize["executionId"] = o.ExecutionId
	}
	if o.ExecutionExternalId != nil {
		toSerialize["executionExternalId"] = o.ExecutionExternalId
	}
	if o.ContextFk != nil {
		toSerialize["contextFk"] = o.ContextFk
	}
	return json.Marshal(toSerialize)
}

type NullableExecution struct {
	value *Execution
	isSet bool
}

func (v NullableExecution) Get() *Execution {
	return v.value
}

func (v *NullableExecution) Set(val *Execution) {
	v.value = val
	v.isSet = true
}

func (v NullableExecution) IsSet() bool {
	return v.isSet
}

func (v *NullableExecution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecution(val *Execution) *NullableExecution {
	return &NullableExecution{value: val, isSet: true}
}

func (v NullableExecution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


