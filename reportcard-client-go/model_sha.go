/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Sha struct for Sha
type Sha struct {
	ShaId *int64 `json:"shaId,omitempty"`
	Sha *string `json:"sha,omitempty"`
	ShaCreated *time.Time `json:"shaCreated,omitempty"`
	BranchFk *int32 `json:"branchFk,omitempty"`
}

// NewSha instantiates a new Sha object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSha() *Sha {
	this := Sha{}
	return &this
}

// NewShaWithDefaults instantiates a new Sha object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShaWithDefaults() *Sha {
	this := Sha{}
	return &this
}

// GetShaId returns the ShaId field value if set, zero value otherwise.
func (o *Sha) GetShaId() int64 {
	if o == nil || o.ShaId == nil {
		var ret int64
		return ret
	}
	return *o.ShaId
}

// GetShaIdOk returns a tuple with the ShaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sha) GetShaIdOk() (*int64, bool) {
	if o == nil || o.ShaId == nil {
		return nil, false
	}
	return o.ShaId, true
}

// HasShaId returns a boolean if a field has been set.
func (o *Sha) HasShaId() bool {
	if o != nil && o.ShaId != nil {
		return true
	}

	return false
}

// SetShaId gets a reference to the given int64 and assigns it to the ShaId field.
func (o *Sha) SetShaId(v int64) {
	o.ShaId = &v
}

// GetSha returns the Sha field value if set, zero value otherwise.
func (o *Sha) GetSha() string {
	if o == nil || o.Sha == nil {
		var ret string
		return ret
	}
	return *o.Sha
}

// GetShaOk returns a tuple with the Sha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sha) GetShaOk() (*string, bool) {
	if o == nil || o.Sha == nil {
		return nil, false
	}
	return o.Sha, true
}

// HasSha returns a boolean if a field has been set.
func (o *Sha) HasSha() bool {
	if o != nil && o.Sha != nil {
		return true
	}

	return false
}

// SetSha gets a reference to the given string and assigns it to the Sha field.
func (o *Sha) SetSha(v string) {
	o.Sha = &v
}

// GetShaCreated returns the ShaCreated field value if set, zero value otherwise.
func (o *Sha) GetShaCreated() time.Time {
	if o == nil || o.ShaCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.ShaCreated
}

// GetShaCreatedOk returns a tuple with the ShaCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sha) GetShaCreatedOk() (*time.Time, bool) {
	if o == nil || o.ShaCreated == nil {
		return nil, false
	}
	return o.ShaCreated, true
}

// HasShaCreated returns a boolean if a field has been set.
func (o *Sha) HasShaCreated() bool {
	if o != nil && o.ShaCreated != nil {
		return true
	}

	return false
}

// SetShaCreated gets a reference to the given time.Time and assigns it to the ShaCreated field.
func (o *Sha) SetShaCreated(v time.Time) {
	o.ShaCreated = &v
}

// GetBranchFk returns the BranchFk field value if set, zero value otherwise.
func (o *Sha) GetBranchFk() int32 {
	if o == nil || o.BranchFk == nil {
		var ret int32
		return ret
	}
	return *o.BranchFk
}

// GetBranchFkOk returns a tuple with the BranchFk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sha) GetBranchFkOk() (*int32, bool) {
	if o == nil || o.BranchFk == nil {
		return nil, false
	}
	return o.BranchFk, true
}

// HasBranchFk returns a boolean if a field has been set.
func (o *Sha) HasBranchFk() bool {
	if o != nil && o.BranchFk != nil {
		return true
	}

	return false
}

// SetBranchFk gets a reference to the given int32 and assigns it to the BranchFk field.
func (o *Sha) SetBranchFk(v int32) {
	o.BranchFk = &v
}

func (o Sha) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShaId != nil {
		toSerialize["shaId"] = o.ShaId
	}
	if o.Sha != nil {
		toSerialize["sha"] = o.Sha
	}
	if o.ShaCreated != nil {
		toSerialize["shaCreated"] = o.ShaCreated
	}
	if o.BranchFk != nil {
		toSerialize["branchFk"] = o.BranchFk
	}
	return json.Marshal(toSerialize)
}

type NullableSha struct {
	value *Sha
	isSet bool
}

func (v NullableSha) Get() *Sha {
	return v.value
}

func (v *NullableSha) Set(val *Sha) {
	v.value = val
	v.isSet = true
}

func (v NullableSha) IsSet() bool {
	return v.isSet
}

func (v *NullableSha) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSha(val *Sha) *NullableSha {
	return &NullableSha{value: val, isSet: true}
}

func (v NullableSha) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSha) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


