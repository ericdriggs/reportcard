/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HostApplicationPipeline struct for HostApplicationPipeline
type HostApplicationPipeline struct {
	Host *string `json:"host,omitempty"`
	Application *string `json:"application,omitempty"`
	Pipeline *string `json:"pipeline,omitempty"`
}

// NewHostApplicationPipeline instantiates a new HostApplicationPipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostApplicationPipeline() *HostApplicationPipeline {
	this := HostApplicationPipeline{}
	return &this
}

// NewHostApplicationPipelineWithDefaults instantiates a new HostApplicationPipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostApplicationPipelineWithDefaults() *HostApplicationPipeline {
	this := HostApplicationPipeline{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *HostApplicationPipeline) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostApplicationPipeline) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *HostApplicationPipeline) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *HostApplicationPipeline) SetHost(v string) {
	o.Host = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *HostApplicationPipeline) GetApplication() string {
	if o == nil || o.Application == nil {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostApplicationPipeline) GetApplicationOk() (*string, bool) {
	if o == nil || o.Application == nil {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *HostApplicationPipeline) HasApplication() bool {
	if o != nil && o.Application != nil {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *HostApplicationPipeline) SetApplication(v string) {
	o.Application = &v
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *HostApplicationPipeline) GetPipeline() string {
	if o == nil || o.Pipeline == nil {
		var ret string
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostApplicationPipeline) GetPipelineOk() (*string, bool) {
	if o == nil || o.Pipeline == nil {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *HostApplicationPipeline) HasPipeline() bool {
	if o != nil && o.Pipeline != nil {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given string and assigns it to the Pipeline field.
func (o *HostApplicationPipeline) SetPipeline(v string) {
	o.Pipeline = &v
}

func (o HostApplicationPipeline) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Application != nil {
		toSerialize["application"] = o.Application
	}
	if o.Pipeline != nil {
		toSerialize["pipeline"] = o.Pipeline
	}
	return json.Marshal(toSerialize)
}

type NullableHostApplicationPipeline struct {
	value *HostApplicationPipeline
	isSet bool
}

func (v NullableHostApplicationPipeline) Get() *HostApplicationPipeline {
	return v.value
}

func (v *NullableHostApplicationPipeline) Set(val *HostApplicationPipeline) {
	v.value = val
	v.isSet = true
}

func (v NullableHostApplicationPipeline) IsSet() bool {
	return v.isSet
}

func (v *NullableHostApplicationPipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostApplicationPipeline(val *HostApplicationPipeline) *NullableHostApplicationPipeline {
	return &NullableHostApplicationPipeline{value: val, isSet: true}
}

func (v NullableHostApplicationPipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostApplicationPipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


