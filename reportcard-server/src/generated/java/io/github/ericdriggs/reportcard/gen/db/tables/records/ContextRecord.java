/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db.tables.records;


import io.github.ericdriggs.reportcard.gen.db.tables.Context;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContextRecord extends UpdatableRecordImpl<ContextRecord> implements Record4<Long, Long, Integer, String> {

    private static final long serialVersionUID = 1126775428;

    /**
     * Setter for <code>reportcard.context.context_id</code>.
     */
    public ContextRecord setContextId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.context.context_id</code>.
     */
    public Long getContextId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>reportcard.context.sha_fk</code>.
     */
    public ContextRecord setShaFk(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.context.sha_fk</code>.
     */
    public Long getShaFk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>reportcard.context.branch_fk</code>.
     */
    public ContextRecord setBranchFk(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.context.branch_fk</code>.
     */
    public Integer getBranchFk() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>reportcard.context.metadata</code>.
     */
    public ContextRecord setMetadata(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.context.metadata</code>.
     */
    public String getMetadata() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Context.CONTEXT.CONTEXT_ID;
    }

    @Override
    public Field<Long> field2() {
        return Context.CONTEXT.SHA_FK;
    }

    @Override
    public Field<Integer> field3() {
        return Context.CONTEXT.BRANCH_FK;
    }

    @Override
    public Field<String> field4() {
        return Context.CONTEXT.METADATA;
    }

    @Override
    public Long component1() {
        return getContextId();
    }

    @Override
    public Long component2() {
        return getShaFk();
    }

    @Override
    public Integer component3() {
        return getBranchFk();
    }

    @Override
    public String component4() {
        return getMetadata();
    }

    @Override
    public Long value1() {
        return getContextId();
    }

    @Override
    public Long value2() {
        return getShaFk();
    }

    @Override
    public Integer value3() {
        return getBranchFk();
    }

    @Override
    public String value4() {
        return getMetadata();
    }

    @Override
    public ContextRecord value1(Long value) {
        setContextId(value);
        return this;
    }

    @Override
    public ContextRecord value2(Long value) {
        setShaFk(value);
        return this;
    }

    @Override
    public ContextRecord value3(Integer value) {
        setBranchFk(value);
        return this;
    }

    @Override
    public ContextRecord value4(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public ContextRecord values(Long value1, Long value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContextRecord
     */
    public ContextRecord() {
        super(Context.CONTEXT);
    }

    /**
     * Create a detached, initialised ContextRecord
     */
    public ContextRecord(Long contextId, Long shaFk, Integer branchFk, String metadata) {
        super(Context.CONTEXT);

        setContextId(contextId);
        setShaFk(shaFk);
        setBranchFk(branchFk);
        setMetadata(metadata);
    }
}
