/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db;


import io.github.ericdriggs.reportcard.gen.db.tables.BranchTable;
import io.github.ericdriggs.reportcard.gen.db.tables.CompanyTable;
import io.github.ericdriggs.reportcard.gen.db.tables.FaultContextTable;
import io.github.ericdriggs.reportcard.gen.db.tables.JobTable;
import io.github.ericdriggs.reportcard.gen.db.tables.OrgTable;
import io.github.ericdriggs.reportcard.gen.db.tables.RepoTable;
import io.github.ericdriggs.reportcard.gen.db.tables.RunTable;
import io.github.ericdriggs.reportcard.gen.db.tables.StageTable;
import io.github.ericdriggs.reportcard.gen.db.tables.StorageTable;
import io.github.ericdriggs.reportcard.gen.db.tables.StorageTypeTable;
import io.github.ericdriggs.reportcard.gen.db.tables.TestCaseFaultTable;
import io.github.ericdriggs.reportcard.gen.db.tables.TestCaseTable;
import io.github.ericdriggs.reportcard.gen.db.tables.TestResultTable;
import io.github.ericdriggs.reportcard.gen.db.tables.TestStatusTable;
import io.github.ericdriggs.reportcard.gen.db.tables.TestSuiteTable;

import java.util.Arrays;
import java.util.List;

import lombok.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportcardTable extends SchemaImpl {

    private static final long serialVersionUID = 464299519;

    /**
     * The reference instance of <code>reportcard</code>
     */
    public static final ReportcardTable REPORTCARD = new ReportcardTable();

    /**
     * The table <code>reportcard.branch</code>.
     */
    public final BranchTable BRANCH = BranchTable.BRANCH;

    /**
     * The table <code>reportcard.company</code>.
     */
    public final CompanyTable COMPANY = CompanyTable.COMPANY;

    /**
     * The table <code>reportcard.fault_context</code>.
     */
    public final FaultContextTable FAULT_CONTEXT = FaultContextTable.FAULT_CONTEXT;

    /**
     * The table <code>reportcard.job</code>.
     */
    public final JobTable JOB = JobTable.JOB;

    /**
     * The table <code>reportcard.org</code>.
     */
    public final OrgTable ORG = OrgTable.ORG;

    /**
     * The table <code>reportcard.repo</code>.
     */
    public final RepoTable REPO = RepoTable.REPO;

    /**
     * The table <code>reportcard.run</code>.
     */
    public final RunTable RUN = RunTable.RUN;

    /**
     * The table <code>reportcard.stage</code>.
     */
    public final StageTable STAGE = StageTable.STAGE;

    /**
     * The table <code>reportcard.storage</code>.
     */
    public final StorageTable STORAGE = StorageTable.STORAGE;

    /**
     * The table <code>reportcard.storage_type</code>.
     */
    public final StorageTypeTable STORAGE_TYPE = StorageTypeTable.STORAGE_TYPE;

    /**
     * The table <code>reportcard.test_case</code>.
     */
    public final TestCaseTable TEST_CASE = TestCaseTable.TEST_CASE;

    /**
     * The table <code>reportcard.test_case_fault</code>.
     */
    public final TestCaseFaultTable TEST_CASE_FAULT = TestCaseFaultTable.TEST_CASE_FAULT;

    /**
     * The table <code>reportcard.test_result</code>.
     */
    public final TestResultTable TEST_RESULT = TestResultTable.TEST_RESULT;

    /**
     * The table <code>reportcard.test_status</code>.
     */
    public final TestStatusTable TEST_STATUS = TestStatusTable.TEST_STATUS;

    /**
     * The table <code>reportcard.test_suite</code>.
     */
    public final TestSuiteTable TEST_SUITE = TestSuiteTable.TEST_SUITE;

    /**
     * No further instances allowed
     */
    private ReportcardTable() {
        super("reportcard", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            BranchTable.BRANCH,
            CompanyTable.COMPANY,
            FaultContextTable.FAULT_CONTEXT,
            JobTable.JOB,
            OrgTable.ORG,
            RepoTable.REPO,
            RunTable.RUN,
            StageTable.STAGE,
            StorageTable.STORAGE,
            StorageTypeTable.STORAGE_TYPE,
            TestCaseTable.TEST_CASE,
            TestCaseFaultTable.TEST_CASE_FAULT,
            TestResultTable.TEST_RESULT,
            TestStatusTable.TEST_STATUS,
            TestSuiteTable.TEST_SUITE
        );
    }
}
