/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db.tables.records;


import io.github.ericdriggs.reportcard.gen.db.tables.Storage;

import lombok.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StorageRecord extends UpdatableRecordImpl<StorageRecord> implements Record6<Long, Long, String, String, String, Byte> {

    private static final long serialVersionUID = -223962386;

    /**
     * Setter for <code>reportcard.storage.storage_id</code>.
     */
    public StorageRecord setStorageId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.storage.storage_id</code>.
     */
    public Long getStorageId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>reportcard.storage.stage_fk</code>.
     */
    public StorageRecord setStageFk(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.storage.stage_fk</code>.
     */
    public Long getStageFk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>reportcard.storage.label</code>.
     */
    public StorageRecord setLabel(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.storage.label</code>.
     */
    public String getLabel() {
        return (String) get(2);
    }

    /**
     * Setter for <code>reportcard.storage.prefix</code>.
     */
    public StorageRecord setPrefix(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.storage.prefix</code>.
     */
    public String getPrefix() {
        return (String) get(3);
    }

    /**
     * Setter for <code>reportcard.storage.index_file</code>.
     */
    public StorageRecord setIndexFile(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.storage.index_file</code>.
     */
    public String getIndexFile() {
        return (String) get(4);
    }

    /**
     * Setter for <code>reportcard.storage.storage_type</code>.
     */
    public StorageRecord setStorageType(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.storage.storage_type</code>.
     */
    public Byte getStorageType() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, String, String, String, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, String, String, String, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Storage.STORAGE.STORAGE_ID;
    }

    @Override
    public Field<Long> field2() {
        return Storage.STORAGE.STAGE_FK;
    }

    @Override
    public Field<String> field3() {
        return Storage.STORAGE.LABEL;
    }

    @Override
    public Field<String> field4() {
        return Storage.STORAGE.PREFIX;
    }

    @Override
    public Field<String> field5() {
        return Storage.STORAGE.INDEX_FILE;
    }

    @Override
    public Field<Byte> field6() {
        return Storage.STORAGE.STORAGE_TYPE;
    }

    @Override
    public Long component1() {
        return getStorageId();
    }

    @Override
    public Long component2() {
        return getStageFk();
    }

    @Override
    public String component3() {
        return getLabel();
    }

    @Override
    public String component4() {
        return getPrefix();
    }

    @Override
    public String component5() {
        return getIndexFile();
    }

    @Override
    public Byte component6() {
        return getStorageType();
    }

    @Override
    public Long value1() {
        return getStorageId();
    }

    @Override
    public Long value2() {
        return getStageFk();
    }

    @Override
    public String value3() {
        return getLabel();
    }

    @Override
    public String value4() {
        return getPrefix();
    }

    @Override
    public String value5() {
        return getIndexFile();
    }

    @Override
    public Byte value6() {
        return getStorageType();
    }

    @Override
    public StorageRecord value1(Long value) {
        setStorageId(value);
        return this;
    }

    @Override
    public StorageRecord value2(Long value) {
        setStageFk(value);
        return this;
    }

    @Override
    public StorageRecord value3(String value) {
        setLabel(value);
        return this;
    }

    @Override
    public StorageRecord value4(String value) {
        setPrefix(value);
        return this;
    }

    @Override
    public StorageRecord value5(String value) {
        setIndexFile(value);
        return this;
    }

    @Override
    public StorageRecord value6(Byte value) {
        setStorageType(value);
        return this;
    }

    @Override
    public StorageRecord values(Long value1, Long value2, String value3, String value4, String value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StorageRecord
     */
    public StorageRecord() {
        super(Storage.STORAGE);
    }

    /**
     * Create a detached, initialised StorageRecord
     */
    public StorageRecord(Long storageId, Long stageFk, String label, String prefix, String indexFile, Byte storageType) {
        super(Storage.STORAGE);

        setStorageId(storageId);
        setStageFk(stageFk);
        setLabel(label);
        setPrefix(prefix);
        setIndexFile(indexFile);
        setStorageType(storageType);
    }

    /**
     * Create a detached, initialised StorageRecord
     */
    public StorageRecord(io.github.ericdriggs.reportcard.gen.db.tables.pojos.Storage value) {
        super(Storage.STORAGE);

        if (value != null) {
            setStorageId(value.getStorageId());
            setStageFk(value.getStageFk());
            setLabel(value.getLabel());
            setPrefix(value.getPrefix());
            setIndexFile(value.getIndexFile());
            setStorageType(value.getStorageType());
        }
    }
}
