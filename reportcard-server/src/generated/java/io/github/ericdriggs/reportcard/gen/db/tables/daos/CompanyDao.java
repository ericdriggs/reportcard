/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db.tables.daos;


import io.github.ericdriggs.reportcard.gen.db.tables.CompanyTable;
import io.github.ericdriggs.reportcard.gen.db.tables.pojos.CompanyPojo;
import io.github.ericdriggs.reportcard.gen.db.tables.records.CompanyRecord;

import java.util.List;
import java.util.Optional;

import lombok.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyDao extends DAOImpl<CompanyRecord, CompanyPojo, Integer> {

    /**
     * Create a new CompanyDao without any configuration
     */
    public CompanyDao() {
        super(CompanyTable.COMPANY, CompanyPojo.class);
    }

    /**
     * Create a new CompanyDao with an attached configuration
     */
    public CompanyDao(Configuration configuration) {
        super(CompanyTable.COMPANY, CompanyPojo.class, configuration);
    }

    @Override
    public Integer getId(CompanyPojo object) {
        return object.getCompanyId();
    }

    /**
     * Fetch records that have <code>company_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CompanyPojo> fetchRangeOfCompanyIdTable(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CompanyTable.COMPANY.COMPANY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>company_id IN (values)</code>
     */
    public List<CompanyPojo> fetchByCompanyIdTable(Integer... values) {
        return fetch(CompanyTable.COMPANY.COMPANY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>company_id = value</code>
     */
    public CompanyPojo fetchOneByCompanyIdTable(Integer value) {
        return fetchOne(CompanyTable.COMPANY.COMPANY_ID, value);
    }

    /**
     * Fetch a unique record that has <code>company_id = value</code>
     */
    public Optional<CompanyPojo> fetchOptionalByCompanyIdTable(Integer value) {
        return fetchOptional(CompanyTable.COMPANY.COMPANY_ID, value);
    }

    /**
     * Fetch records that have <code>company_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CompanyPojo> fetchRangeOfCompanyNameTable(String lowerInclusive, String upperInclusive) {
        return fetchRange(CompanyTable.COMPANY.COMPANY_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>company_name IN (values)</code>
     */
    public List<CompanyPojo> fetchByCompanyNameTable(String... values) {
        return fetch(CompanyTable.COMPANY.COMPANY_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>company_name = value</code>
     */
    public CompanyPojo fetchOneByCompanyNameTable(String value) {
        return fetchOne(CompanyTable.COMPANY.COMPANY_NAME, value);
    }

    /**
     * Fetch a unique record that has <code>company_name = value</code>
     */
    public Optional<CompanyPojo> fetchOptionalByCompanyNameTable(String value) {
        return fetchOptional(CompanyTable.COMPANY.COMPANY_NAME, value);
    }
}
