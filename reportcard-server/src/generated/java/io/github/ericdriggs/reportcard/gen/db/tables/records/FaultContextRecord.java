/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db.tables.records;


import io.github.ericdriggs.reportcard.gen.db.tables.FaultContext;

import lombok.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FaultContextRecord extends UpdatableRecordImpl<FaultContextRecord> implements Record2<Byte, String> {

    private static final long serialVersionUID = -302392123;

    /**
     * Setter for <code>reportcard.fault_context.fault_context_id</code>.
     */
    public FaultContextRecord setFaultContextId(Byte value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.fault_context.fault_context_id</code>.
     */
    public Byte getFaultContextId() {
        return (Byte) get(0);
    }

    /**
     * Setter for <code>reportcard.fault_context.fault_context_name</code>.
     */
    public FaultContextRecord setFaultContextName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.fault_context.fault_context_name</code>.
     */
    public String getFaultContextName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Byte> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Byte, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Byte, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Byte> field1() {
        return FaultContext.FAULT_CONTEXT.FAULT_CONTEXT_ID;
    }

    @Override
    public Field<String> field2() {
        return FaultContext.FAULT_CONTEXT.FAULT_CONTEXT_NAME;
    }

    @Override
    public Byte component1() {
        return getFaultContextId();
    }

    @Override
    public String component2() {
        return getFaultContextName();
    }

    @Override
    public Byte value1() {
        return getFaultContextId();
    }

    @Override
    public String value2() {
        return getFaultContextName();
    }

    @Override
    public FaultContextRecord value1(Byte value) {
        setFaultContextId(value);
        return this;
    }

    @Override
    public FaultContextRecord value2(String value) {
        setFaultContextName(value);
        return this;
    }

    @Override
    public FaultContextRecord values(Byte value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FaultContextRecord
     */
    public FaultContextRecord() {
        super(FaultContext.FAULT_CONTEXT);
    }

    /**
     * Create a detached, initialised FaultContextRecord
     */
    public FaultContextRecord(Byte faultContextId, String faultContextName) {
        super(FaultContext.FAULT_CONTEXT);

        setFaultContextId(faultContextId);
        setFaultContextName(faultContextName);
    }

    /**
     * Create a detached, initialised FaultContextRecord
     */
    public FaultContextRecord(io.github.ericdriggs.reportcard.gen.db.tables.pojos.FaultContext value) {
        super(FaultContext.FAULT_CONTEXT);

        if (value != null) {
            setFaultContextId(value.getFaultContextId());
            setFaultContextName(value.getFaultContextName());
        }
    }
}
