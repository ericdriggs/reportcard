/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db.tables.records;


import io.github.ericdriggs.reportcard.gen.db.tables.Org;

import lombok.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrgRecord extends UpdatableRecordImpl<OrgRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1173456497;

    /**
     * Setter for <code>reportcard.org.org_id</code>.
     */
    public OrgRecord setOrgId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.org.org_id</code>.
     */
    public Integer getOrgId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>reportcard.org.org_name</code>.
     */
    public OrgRecord setOrgName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.org.org_name</code>.
     */
    public String getOrgName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>reportcard.org.company_fk</code>.
     */
    public OrgRecord setCompanyFk(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.org.company_fk</code>.
     */
    public Integer getCompanyFk() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Org.ORG.ORG_ID;
    }

    @Override
    public Field<String> field2() {
        return Org.ORG.ORG_NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Org.ORG.COMPANY_FK;
    }

    @Override
    public Integer component1() {
        return getOrgId();
    }

    @Override
    public String component2() {
        return getOrgName();
    }

    @Override
    public Integer component3() {
        return getCompanyFk();
    }

    @Override
    public Integer value1() {
        return getOrgId();
    }

    @Override
    public String value2() {
        return getOrgName();
    }

    @Override
    public Integer value3() {
        return getCompanyFk();
    }

    @Override
    public OrgRecord value1(Integer value) {
        setOrgId(value);
        return this;
    }

    @Override
    public OrgRecord value2(String value) {
        setOrgName(value);
        return this;
    }

    @Override
    public OrgRecord value3(Integer value) {
        setCompanyFk(value);
        return this;
    }

    @Override
    public OrgRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrgRecord
     */
    public OrgRecord() {
        super(Org.ORG);
    }

    /**
     * Create a detached, initialised OrgRecord
     */
    public OrgRecord(Integer orgId, String orgName, Integer companyFk) {
        super(Org.ORG);

        setOrgId(orgId);
        setOrgName(orgName);
        setCompanyFk(companyFk);
    }

    /**
     * Create a detached, initialised OrgRecord
     */
    public OrgRecord(io.github.ericdriggs.reportcard.gen.db.tables.pojos.Org value) {
        super(Org.ORG);

        if (value != null) {
            setOrgId(value.getOrgId());
            setOrgName(value.getOrgName());
            setCompanyFk(value.getCompanyFk());
        }
    }
}
