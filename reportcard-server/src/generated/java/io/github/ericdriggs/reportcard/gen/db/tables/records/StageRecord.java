/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db.tables.records;


import io.github.ericdriggs.reportcard.gen.db.tables.StageTable;
import io.github.ericdriggs.reportcard.gen.db.tables.pojos.StagePojo;

import lombok.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StageRecord extends UpdatableRecordImpl<StageRecord> implements Record4<Long, String, Long, String> {

    private static final long serialVersionUID = -1419455212;

    /**
     * Setter for <code>reportcard.stage.stage_id</code>.
     */
    public StageRecord setStageId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.stage.stage_id</code>.
     */
    public Long getStageId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>reportcard.stage.stage_name</code>.
     */
    public StageRecord setStageName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.stage.stage_name</code>.
     */
    public String getStageName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>reportcard.stage.run_fk</code>.
     */
    public StageRecord setRunFk(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.stage.run_fk</code>.
     */
    public Long getRunFk() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>reportcard.stage.test_result_json</code>.
     */
    public StageRecord setTestResultJson(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.stage.test_result_json</code>.
     */
    public String getTestResultJson() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Long, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return StageTable.STAGE.STAGE_ID;
    }

    @Override
    public Field<String> field2() {
        return StageTable.STAGE.STAGE_NAME;
    }

    @Override
    public Field<Long> field3() {
        return StageTable.STAGE.RUN_FK;
    }

    @Override
    public Field<String> field4() {
        return StageTable.STAGE.TEST_RESULT_JSON;
    }

    @Override
    public Long component1() {
        return getStageId();
    }

    @Override
    public String component2() {
        return getStageName();
    }

    @Override
    public Long component3() {
        return getRunFk();
    }

    @Override
    public String component4() {
        return getTestResultJson();
    }

    @Override
    public Long value1() {
        return getStageId();
    }

    @Override
    public String value2() {
        return getStageName();
    }

    @Override
    public Long value3() {
        return getRunFk();
    }

    @Override
    public String value4() {
        return getTestResultJson();
    }

    @Override
    public StageRecord value1(Long value) {
        setStageId(value);
        return this;
    }

    @Override
    public StageRecord value2(String value) {
        setStageName(value);
        return this;
    }

    @Override
    public StageRecord value3(Long value) {
        setRunFk(value);
        return this;
    }

    @Override
    public StageRecord value4(String value) {
        setTestResultJson(value);
        return this;
    }

    @Override
    public StageRecord values(Long value1, String value2, Long value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StageRecord
     */
    public StageRecord() {
        super(StageTable.STAGE);
    }

    /**
     * Create a detached, initialised StageRecord
     */
    public StageRecord(Long stageId, String stageName, Long runFk, String testResultJson) {
        super(StageTable.STAGE);

        setStageId(stageId);
        setStageName(stageName);
        setRunFk(runFk);
        setTestResultJson(testResultJson);
    }

    /**
     * Create a detached, initialised StageRecord
     */
    public StageRecord(StagePojo value) {
        super(StageTable.STAGE);

        if (value != null) {
            setStageId(value.getStageId());
            setStageName(value.getStageName());
            setRunFk(value.getRunFk());
            setTestResultJson(value.getTestResultJson());
        }
    }
}
