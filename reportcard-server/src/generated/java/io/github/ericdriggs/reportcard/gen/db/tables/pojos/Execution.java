/*
 * This file is generated by jOOQ.
 */
package io.github.ericdriggs.reportcard.gen.db.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Execution implements Serializable {

    private static final long serialVersionUID = -169707669;

    private Long          executionId;
    private String        executionReference;
    private Long          jobFk;
    private Integer       jobExecutionCount;
    private String        sha;
    private LocalDateTime created;

    public Execution() {}

    public Execution(Execution value) {
        this.executionId = value.executionId;
        this.executionReference = value.executionReference;
        this.jobFk = value.jobFk;
        this.jobExecutionCount = value.jobExecutionCount;
        this.sha = value.sha;
        this.created = value.created;
    }

    public Execution(
        Long          executionId,
        String        executionReference,
        Long          jobFk,
        Integer       jobExecutionCount,
        String        sha,
        LocalDateTime created
    ) {
        this.executionId = executionId;
        this.executionReference = executionReference;
        this.jobFk = jobFk;
        this.jobExecutionCount = jobExecutionCount;
        this.sha = sha;
        this.created = created;
    }

    /**
     * Getter for <code>reportcard.execution.execution_id</code>.
     */
    public Long getExecutionId() {
        return this.executionId;
    }

    /**
     * Setter for <code>reportcard.execution.execution_id</code>.
     */
    public Execution setExecutionId(Long executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.execution_reference</code>.
     */
    public String getExecutionReference() {
        return this.executionReference;
    }

    /**
     * Setter for <code>reportcard.execution.execution_reference</code>.
     */
    public Execution setExecutionReference(String executionReference) {
        this.executionReference = executionReference;
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.job_fk</code>.
     */
    public Long getJobFk() {
        return this.jobFk;
    }

    /**
     * Setter for <code>reportcard.execution.job_fk</code>.
     */
    public Execution setJobFk(Long jobFk) {
        this.jobFk = jobFk;
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.job_execution_count</code>.
     */
    public Integer getJobExecutionCount() {
        return this.jobExecutionCount;
    }

    /**
     * Setter for <code>reportcard.execution.job_execution_count</code>.
     */
    public Execution setJobExecutionCount(Integer jobExecutionCount) {
        this.jobExecutionCount = jobExecutionCount;
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.sha</code>.
     */
    public String getSha() {
        return this.sha;
    }

    /**
     * Setter for <code>reportcard.execution.sha</code>.
     */
    public Execution setSha(String sha) {
        this.sha = sha;
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.created</code>.
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>reportcard.execution.created</code>.
     */
    public Execution setCreated(LocalDateTime created) {
        this.created = created;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Execution (");

        sb.append(executionId);
        sb.append(", ").append(executionReference);
        sb.append(", ").append(jobFk);
        sb.append(", ").append(jobExecutionCount);
        sb.append(", ").append(sha);
        sb.append(", ").append(created);

        sb.append(")");
        return sb.toString();
    }
}
