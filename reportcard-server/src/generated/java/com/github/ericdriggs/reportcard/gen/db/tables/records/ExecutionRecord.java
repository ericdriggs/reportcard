/*
 * This file is generated by jOOQ.
 */
package com.github.ericdriggs.reportcard.gen.db.tables.records;


import com.github.ericdriggs.reportcard.gen.db.tables.Execution;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExecutionRecord extends UpdatableRecordImpl<ExecutionRecord> implements Record3<Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>reportcard.execution.execution_id</code>.
     */
    public ExecutionRecord setExecutionId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.execution_id</code>.
     */
    public Long getExecutionId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>reportcard.execution.execution_external_id</code>.
     */
    public ExecutionRecord setExecutionExternalId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.execution_external_id</code>.
     */
    public String getExecutionExternalId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>reportcard.execution.context_fk</code>.
     */
    public ExecutionRecord setContextFk(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>reportcard.execution.context_fk</code>.
     */
    public Long getContextFk() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Execution.EXECUTION.EXECUTION_ID;
    }

    @Override
    public Field<String> field2() {
        return Execution.EXECUTION.EXECUTION_EXTERNAL_ID;
    }

    @Override
    public Field<Long> field3() {
        return Execution.EXECUTION.CONTEXT_FK;
    }

    @Override
    public Long component1() {
        return getExecutionId();
    }

    @Override
    public String component2() {
        return getExecutionExternalId();
    }

    @Override
    public Long component3() {
        return getContextFk();
    }

    @Override
    public Long value1() {
        return getExecutionId();
    }

    @Override
    public String value2() {
        return getExecutionExternalId();
    }

    @Override
    public Long value3() {
        return getContextFk();
    }

    @Override
    public ExecutionRecord value1(Long value) {
        setExecutionId(value);
        return this;
    }

    @Override
    public ExecutionRecord value2(String value) {
        setExecutionExternalId(value);
        return this;
    }

    @Override
    public ExecutionRecord value3(Long value) {
        setContextFk(value);
        return this;
    }

    @Override
    public ExecutionRecord values(Long value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExecutionRecord
     */
    public ExecutionRecord() {
        super(Execution.EXECUTION);
    }

    /**
     * Create a detached, initialised ExecutionRecord
     */
    public ExecutionRecord(Long executionId, String executionExternalId, Long contextFk) {
        super(Execution.EXECUTION);

        setExecutionId(executionId);
        setExecutionExternalId(executionExternalId);
        setContextFk(contextFk);
    }
}
